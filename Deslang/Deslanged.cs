//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Deslang {
    using System.CodeDom;
    using System.Reflection;
    
    internal partial class Deslanged {
        private static CodeCompileUnit _CompileUnit(string[] referencedAssemblies, CodeNamespace[] namespaces, CodeAttributeDeclaration[] assemblyCustomAttributes, CodeDirective[] startDirectives, CodeDirective[] endDirectives) {
            CodeCompileUnit result = new CodeCompileUnit();
            result.ReferencedAssemblies.AddRange(referencedAssemblies);
            result.Namespaces.AddRange(namespaces);
            result.AssemblyCustomAttributes.AddRange(assemblyCustomAttributes);
            result.StartDirectives.AddRange(startDirectives);
            result.EndDirectives.AddRange(endDirectives);
            return result;
        }
        private static CodeNamespace _Namespace(string name, CodeNamespaceImport[] imports, CodeTypeDeclaration[] types, CodeCommentStatement[] comments) {
            CodeNamespace result = new CodeNamespace();
            result.Name = name;
            result.Imports.AddRange(imports);
            result.Types.AddRange(types);
            result.Comments.AddRange(comments);
            return result;
        }
        private static CodeTypeDeclaration _TypeDeclaration(
                    string name, 
                    bool isClass, 
                    bool isEnum, 
                    bool isInterface, 
                    bool isStruct, 
                    bool isPartial, 
                    MemberAttributes attributes, 
                    TypeAttributes typeAttributes, 
                    CodeTypeParameter[] typeParameters, 
                    CodeTypeReference[] baseTypes, 
                    CodeTypeMember[] members, 
                    CodeCommentStatement[] comments, 
                    CodeAttributeDeclaration[] customAttributes, 
                    CodeDirective[] startDirectives, 
                    CodeDirective[] endDirectives, 
                    CodeLinePragma linePragma) {
            CodeTypeDeclaration result = new CodeTypeDeclaration(name);
            result.IsClass = isClass;
            result.IsEnum = isEnum;
            result.IsInterface = isInterface;
            result.IsStruct = isStruct;
            result.IsPartial = isPartial;
            result.Attributes = attributes;
            result.TypeAttributes = typeAttributes;
            result.TypeParameters.AddRange(typeParameters);
            result.BaseTypes.AddRange(baseTypes);
            result.Members.AddRange(members);
            result.Comments.AddRange(comments);
            result.CustomAttributes.AddRange(customAttributes);
            result.StartDirectives.AddRange(startDirectives);
            result.EndDirectives.AddRange(endDirectives);
            result.LinePragma = linePragma;
            return result;
        }
        private static CodeMemberMethod _MemberMethod(CodeTypeReference returnType, string name, MemberAttributes attributes, CodeParameterDeclarationExpression[] parameters, CodeStatement[] statements, CodeTypeReference[] implementationTypes, CodeTypeReference privateImplementationType, CodeCommentStatement[] comments, CodeAttributeDeclaration[] customAttributes, CodeAttributeDeclaration[] returnTypeCustomAttributes, CodeDirective[] startDirectives, CodeDirective[] endDirectives, CodeLinePragma linePragma) {
            CodeMemberMethod result = new CodeMemberMethod();
            result.ReturnType = returnType;
            result.Name = name;
            result.Attributes = attributes;
            result.Parameters.AddRange(parameters);
            result.Statements.AddRange(statements);
            result.ImplementationTypes.AddRange(implementationTypes);
            result.PrivateImplementationType = privateImplementationType;
            result.Comments.AddRange(comments);
            result.CustomAttributes.AddRange(customAttributes);
            result.ReturnTypeCustomAttributes.AddRange(returnTypeCustomAttributes);
            result.StartDirectives.AddRange(startDirectives);
            result.EndDirectives.AddRange(endDirectives);
            result.LinePragma = linePragma;
            return result;
        }
        public static System.CodeDom.CodeCompileUnit CodeDomBuilder {
            get {
                return Deslanged._CompileUnit(new string[] {
                            "System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"}, new CodeNamespace[] {
                            Deslanged._Namespace("", new CodeNamespaceImport[] {
                                        new CodeNamespaceImport("System"),
                                        new CodeNamespaceImport("System.CodeDom"),
                                        new CodeNamespaceImport("System.Reflection")}, new CodeTypeDeclaration[0], new CodeCommentStatement[0]),
                            Deslanged._Namespace("CD", new CodeNamespaceImport[0], new CodeTypeDeclaration[] {
                                        Deslanged._TypeDeclaration("CodeDomBuilder", true, false, false, false, false, (MemberAttributes.Final | MemberAttributes. Private), TypeAttributes.NotPublic, new CodeTypeParameter[0], new CodeTypeReference[0], new CodeTypeMember[] {
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeParameterDeclarationExpression"), "ParameterDeclarationExpression", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeTypeReference"), "type"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(string)), "name"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("FieldDirection"), "direction"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeAttributeDeclaration"), 1), "customAttributes")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeParameterDeclarationExpression"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeParameterDeclarationExpression"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("type"),
                                                                                new CodeArgumentReferenceExpression("name")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Direction"), new CodeArgumentReferenceExpression("direction")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "CustomAttributes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("customAttributes")})),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeAssignStatement"), "AssignStatement", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeExpression"), "left"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeExpression"), "right"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeAssignStatement"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeAssignStatement"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("left"),
                                                                                new CodeArgumentReferenceExpression("right")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeAttachEventStatement"), "AttachEventStatement", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeEventReferenceExpression"), "eventRef"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeExpression"), "listener"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeAttachEventStatement"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeAttachEventStatement"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("eventRef"),
                                                                                new CodeArgumentReferenceExpression("listener")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeCommentStatement"), "CommentStatement", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeComment"), "comment"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeCommentStatement"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeCommentStatement"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("comment")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeConditionStatement"), "ConditionStatement", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeExpression"), "condition"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeStatement"), 1), "trueStatements"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeStatement"), 1), "falseStatements"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeConditionStatement"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeConditionStatement"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("condition"),
                                                                                new CodeArgumentReferenceExpression("trueStatements"),
                                                                                new CodeArgumentReferenceExpression("falseStatements")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeExpressionStatement"), "ExpressionStatement", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeExpression"), "expression"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeExpressionStatement"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeExpressionStatement"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("expression")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeGotoStatement"), "GotoStatement", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(string)), "label"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeGotoStatement"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeGotoStatement"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("label")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeIterationStatement"), "IterationStatement", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeStatement"), "initStatement"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeExpression"), "testExpression"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeStatement"), "incrementStatement"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeStatement"), 1), "statements"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeIterationStatement"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeIterationStatement"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("initStatement"),
                                                                                new CodeArgumentReferenceExpression("testExpression"),
                                                                                new CodeArgumentReferenceExpression("incrementStatement"),
                                                                                new CodeArgumentReferenceExpression("statements")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeLabeledStatement"), "LabeledStatement", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(string)), "label"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeStatement"), "statement"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeLabeledStatement"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeLabeledStatement"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("label"),
                                                                                new CodeArgumentReferenceExpression("statement")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeMethodReturnStatement"), "MethodReturnStatement", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeExpression"), "expression"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeMethodReturnStatement"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeMethodReturnStatement"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("expression")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeRemoveEventStatement"), "RemoveEventStatement", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeEventReferenceExpression"), "eventRef"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeExpression"), "listener"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeRemoveEventStatement"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeRemoveEventStatement"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("eventRef"),
                                                                                new CodeArgumentReferenceExpression("listener")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeSnippetStatement"), "SnippetStatement", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(string)), "value"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeSnippetStatement"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeSnippetStatement"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("value")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeThrowExceptionStatement"), "ThrowExceptionStatement", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeExpression"), "toThrow"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeThrowExceptionStatement"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeThrowExceptionStatement"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("toThrow")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeTryCatchFinallyStatement"), "TryCatchFinallyStatement", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeStatement"), 1), "tryStatements"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeCatchClause"), 1), "catchClauses"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeStatement"), 1), "finallyStatements"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeTryCatchFinallyStatement"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeTryCatchFinallyStatement"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("tryStatements"),
                                                                                new CodeArgumentReferenceExpression("catchClauses"),
                                                                                new CodeArgumentReferenceExpression("finallyStatements")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeVariableDeclarationStatement"), "VariableDeclarationStatement", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeTypeReference"), "type"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(string)), "name"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeExpression"), "initExpression"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeVariableDeclarationStatement"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeVariableDeclarationStatement"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("type"),
                                                                                new CodeArgumentReferenceExpression("name"),
                                                                                new CodeArgumentReferenceExpression("initExpression")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeTypeReference"), "TypeReference", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(string)), "baseType"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeTypeReferenceOptions"), "options"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeTypeReference"), 1), "typeArguments"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeTypeReference"), "arrayElementType"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(int)), "arrayRank")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeTypeReference"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeTypeReference"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("baseType"),
                                                                                new CodeArgumentReferenceExpression("options")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "ArrayElementType"), new CodeArgumentReferenceExpression("arrayElementType")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "ArrayRank"), new CodeArgumentReferenceExpression("arrayRank")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "TypeArguments"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("typeArguments")})),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeMemberField"), "MemberField", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeTypeReference"), "type"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(string)), "name"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeExpression"), "initExpression"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("MemberAttributes"), "attributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeCommentStatement"), 1), "comments"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeAttributeDeclaration"), 1), "customAttributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeMemberField"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeMemberField"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("type"),
                                                                                new CodeArgumentReferenceExpression("name")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "InitExpression"), new CodeArgumentReferenceExpression("initExpression")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Attributes"), new CodeArgumentReferenceExpression("attributes")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Comments"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("comments")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "CustomAttributes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("customAttributes")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeMemberEvent"), "MemberEvent", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeTypeReference"), "type"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(string)), "name"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("MemberAttributes"), "attributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeTypeReference"), 1), "implementationTypes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeTypeReference"), "privateImplementationType"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeCommentStatement"), 1), "comments"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeAttributeDeclaration"), 1), "customAttributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeMemberEvent"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeMemberEvent"), new CodeExpression[0])),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Type"), new CodeArgumentReferenceExpression("type")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Name"), new CodeArgumentReferenceExpression("name")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Attributes"), new CodeArgumentReferenceExpression("attributes")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "ImplementationTypes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("implementationTypes")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "PrivateImplementationType"), new CodeArgumentReferenceExpression("privateImplementationType")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Comments"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("comments")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "CustomAttributes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("customAttributes")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeMemberMethod"), "MemberMethod", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeTypeReference"), "returnType"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(string)), "name"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("MemberAttributes"), "attributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeParameterDeclarationExpression"), 1), "parameters"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeStatement"), 1), "statements"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeTypeReference"), 1), "implementationTypes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeTypeReference"), "privateImplementationType"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeCommentStatement"), 1), "comments"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeAttributeDeclaration"), 1), "customAttributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeAttributeDeclaration"), 1), "returnTypeCustomAttributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeMemberMethod"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeMemberMethod"), new CodeExpression[0])),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "ReturnType"), new CodeArgumentReferenceExpression("returnType")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Name"), new CodeArgumentReferenceExpression("name")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Attributes"), new CodeArgumentReferenceExpression("attributes")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Parameters"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("parameters")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Statements"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("statements")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "ImplementationTypes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("implementationTypes")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "PrivateImplementationType"), new CodeArgumentReferenceExpression("privateImplementationType")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Comments"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("comments")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "CustomAttributes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("customAttributes")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "ReturnTypeCustomAttributes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("returnTypeCustomAttributes")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeEntryPointMethod"), "EntryPointMethod", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeTypeReference"), "returnType"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(string)), "name"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("MemberAttributes"), "attributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeParameterDeclarationExpression"), 1), "parameters"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeStatement"), 1), "statements"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeTypeReference"), 1), "implementationTypes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeTypeReference"), "privateImplementationType"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeCommentStatement"), 1), "comments"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeAttributeDeclaration"), 1), "customAttributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeAttributeDeclaration"), 1), "returnTypeCustomAttributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeEntryPointMethod"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeEntryPointMethod"), new CodeExpression[0])),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "ReturnType"), new CodeArgumentReferenceExpression("returnType")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Name"), new CodeArgumentReferenceExpression("name")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Attributes"), new CodeArgumentReferenceExpression("attributes")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Parameters"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("parameters")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Statements"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("statements")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "ImplementationTypes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("implementationTypes")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "PrivateImplementationType"), new CodeArgumentReferenceExpression("privateImplementationType")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Comments"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("comments")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "CustomAttributes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("customAttributes")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "ReturnTypeCustomAttributes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("returnTypeCustomAttributes")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeConstructor"), "Constructor", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("MemberAttributes"), "attributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeParameterDeclarationExpression"), 1), "parameters"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeExpression"), 1), "chainedConstructorArgs"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeExpression"), 1), "baseConstructorArgs"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeStatement"), 1), "statements"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeCommentStatement"), 1), "comments"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeAttributeDeclaration"), 1), "customAttributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeConstructor"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeConstructor"), new CodeExpression[0])),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Attributes"), new CodeArgumentReferenceExpression("attributes")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Parameters"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("parameters")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "ChainedConstructorArgs"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("chainedConstructorArgs")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "BaseConstructorArgs"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("baseConstructorArgs")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Statements"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("statements")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Comments"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("comments")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "CustomAttributes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("customAttributes")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeTypeConstructor"), "TypeConstructor", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("MemberAttributes"), "attributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeParameterDeclarationExpression"), 1), "parameters"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeStatement"), 1), "statements"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeCommentStatement"), 1), "comments"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeAttributeDeclaration"), 1), "customAttributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeTypeConstructor"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeTypeConstructor"), new CodeExpression[0])),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Attributes"), new CodeArgumentReferenceExpression("attributes")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Parameters"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("parameters")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Statements"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("statements")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Comments"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("comments")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "CustomAttributes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("customAttributes")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeMemberProperty"), "MemberProperty", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeTypeReference"), "type"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(string)), "name"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("MemberAttributes"), "attributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeParameterDeclarationExpression"), 1), "parameters"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeStatement"), 1), "getStatements"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeStatement"), 1), "setStatements"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeTypeReference"), 1), "implementationTypes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeTypeReference"), "privateImplementationType"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeCommentStatement"), 1), "comments"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeAttributeDeclaration"), 1), "customAttributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeMemberProperty"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeMemberProperty"), new CodeExpression[0])),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Type"), new CodeArgumentReferenceExpression("type")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Name"), new CodeArgumentReferenceExpression("name")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Attributes"), new CodeArgumentReferenceExpression("attributes")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Parameters"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("parameters")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "GetStatements"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("getStatements")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "SetStatements"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("setStatements")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "ImplementationTypes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("implementationTypes")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "PrivateImplementationType"), new CodeArgumentReferenceExpression("privateImplementationType")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Comments"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("comments")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "CustomAttributes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("customAttributes")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeTypeDeclaration"), "TypeDeclaration", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(string)), "name"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(bool)), "isClass"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(bool)), "isEnum"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(bool)), "isInterface"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(bool)), "isStruct"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(bool)), "isPartial"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("MemberAttributes"), "attributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("TypeAttributes"), "typeAttributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeTypeParameter"), 1), "typeParameters"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeTypeReference"), 1), "baseTypes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeTypeMember"), 1), "members"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeCommentStatement"), 1), "comments"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeAttributeDeclaration"), 1), "customAttributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeTypeDeclaration"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeTypeDeclaration"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("name")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "IsClass"), new CodeArgumentReferenceExpression("isClass")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "IsEnum"), new CodeArgumentReferenceExpression("isEnum")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "IsInterface"), new CodeArgumentReferenceExpression("isInterface")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "IsStruct"), new CodeArgumentReferenceExpression("isStruct")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "IsPartial"), new CodeArgumentReferenceExpression("isPartial")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Attributes"), new CodeArgumentReferenceExpression("attributes")),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "TypeAttributes"), new CodeArgumentReferenceExpression("typeAttributes")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "TypeParameters"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("typeParameters")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "BaseTypes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("baseTypes")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Members"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("members")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Comments"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("comments")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "CustomAttributes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("customAttributes")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeTypeParameter"), "TypeParameter", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(string)), "name"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(bool)), "hasConstructorConstraint"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeTypeReference"), 1), "constraints"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeAttributeDeclaration"), 1), "customAttributes")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeTypeParameter"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeTypeParameter"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("name")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "HasConstructorConstraint"), new CodeArgumentReferenceExpression("hasConstructorConstraint")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Constraints"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("constraints")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "CustomAttributes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("customAttributes")})),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeNamespace"), "Namespace", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(string)), "name"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeNamespaceImport"), 1), "imports"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeTypeDeclaration"), 1), "types"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeCommentStatement"), 1), "comments")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeNamespace"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeNamespace"), new CodeExpression[0])),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Name"), new CodeArgumentReferenceExpression("name")),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Imports"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("imports")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Types"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("types")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Comments"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("comments")})),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeNamespaceImport"), "NamespaceImport", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(typeof(string)), "nameSpace"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference("CodeLinePragma"), "linePragma")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeNamespaceImport"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeNamespaceImport"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("nameSpace")})),
                                                                new CodeAssignStatement(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "LinePragma"), new CodeArgumentReferenceExpression("linePragma")),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null),
                                                    Deslanged._MemberMethod(new CodeTypeReference("CodeCompileUnit"), "CompileUnit", (MemberAttributes.Static | MemberAttributes. Public), new CodeParameterDeclarationExpression[] {
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference(typeof(string)), 1), "referencedAssemblies"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeNamespace"), 1), "namespaces"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeAttributeDeclaration"), 1), "assemblyCustomAttributes"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "startDirectives"),
                                                                new CodeParameterDeclarationExpression(new CodeTypeReference(new CodeTypeReference("CodeDirective"), 1), "endDirectives")}, new CodeStatement[] {
                                                                new CodeVariableDeclarationStatement(new CodeTypeReference("CodeCompileUnit"), "result", new CodeObjectCreateExpression(new CodeTypeReference("CodeCompileUnit"), new CodeExpression[0])),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "ReferencedAssemblies"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("referencedAssemblies")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "Namespaces"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("namespaces")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "AssemblyCustomAttributes"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("assemblyCustomAttributes")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "StartDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("startDirectives")})),
                                                                new CodeExpressionStatement(new CodeMethodInvokeExpression(new CodeMethodReferenceExpression(new CodePropertyReferenceExpression(new CodeVariableReferenceExpression("result"), "EndDirectives"), "AddRange"), new CodeExpression[] {
                                                                                new CodeArgumentReferenceExpression("endDirectives")})),
                                                                new CodeMethodReturnStatement(new CodeVariableReferenceExpression("result"))}, new CodeTypeReference[0], null, new CodeCommentStatement[0], new CodeAttributeDeclaration[0], new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null)}, new CodeCommentStatement[] {
                                                    new CodeCommentStatement(" <summary>", true),
                                                    new CodeCommentStatement(" We use this class to help deserialize our arrays. All it does is make it so ", true),
                                                    new CodeCommentStatement(" we can instantiate complex code objects entirely inline. Deslang rips methods", true),
                                                    new CodeCommentStatement(" out of this as needed to import them into the code it generates.", true),
                                                    new CodeCommentStatement(" </summary>", true)}, new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0], null)}, new CodeCommentStatement[0])}, new CodeAttributeDeclaration[0], new CodeDirective[0], new CodeDirective[0]);
            }
        }
    }
}
